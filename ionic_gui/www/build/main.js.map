{"version":3,"sources":["../../src/pages/home/home.ts","../../src/pages/product/product.ts","../../node_modules/@angular/core/esm5 lazy","../../src lazy","../../src/pages/configuration/configuration.ts","../../src/app/main.ts","../../src/app/app.module.ts","../../src/app/app.component.ts","../../src/providers/backend-data.ts","../../src/pages/list/list.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAA0C;AACgB;AAClB;AAIH;AACN;AAE0B;AAET;AACA;AAOhD;IAcE,kBAAmB,OAAsB,EAAS,MAAiB,EAAS,IAAU,EAAU,WAAwB,EAAQ,SAA0B,EAAQ,SAA0B;QAAzK,YAAO,GAAP,OAAO,CAAe;QAAS,WAAM,GAAN,MAAM,CAAW;QAAS,SAAI,GAAJ,IAAI,CAAM;QAAU,gBAAW,GAAX,WAAW,CAAa;QAAQ,cAAS,GAAT,SAAS,CAAiB;QAAQ,cAAS,GAAT,SAAS,CAAiB;QAG1L,IAAI,CAAC;YACH,8CAA8C;YAC9C,IAAI,CAAC,WAAW,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC;YACrD,IAAI,CAAC,WAAW,CAAC,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,KAAK,CAAC;YAC3D,IAAI,CAAC,WAAW,CAAC,iBAAiB,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,aAAa,CAAC;YAC3E,IAAI,CAAC,WAAW,CAAC,YAAY,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,QAAQ,CAAC;QACnE,CAAC;QAAC,KAAK,EAAC,CAAC,CAAC,CAAC,CAAC;YACV,oCAAoC;YACpC,IAAI,CAAC,kBAAkB,EAAG,CAAC;QAC7B,CAAC;IAIH,CAAC;IAEH,qCAAkB,GAAlB;QAAA,iBAoBC;QAlBD,iBAAiB;QACjB,EAAE,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC,CAAC;YACjC,qEAAqE;YACnE,IAAI,CAAC,QAAQ,EAAG,CAAC;QACnB,CAAC;QACD,IAAI,CAAC,CAAC;YACJ,OAAO,CAAC,GAAG,CAAE,wBAAwB,CAAE,CAAC;YACxC,IAAI,CAAC,WAAW,CAAC,YAAY,EAAE,CAAC,IAAI,CAAC,UAAC,GAAG;gBAC3C,6DAA6D;gBACjD,KAAI,CAAC,WAAW,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC;gBACnC,KAAI,CAAC,QAAQ,EAAG,CAAC;YACnB,CAAC,CAAC,CAAC;QAEb,CAAC;QAED,2BAA2B;IAG3B,CAAC;IAGD,2BAAQ,GAAR;QAAA,iBAiBC;QAhBG,IAAI,CAAC,WAAW,CAAC,eAAe,EAAE,CAAC,IAAI,CAAC,cAAI;YAEA,0BAA0B;YAC1B,KAAI,CAAC,WAAW,CAAC,MAAM,GAAG,IAAI,CAAC,EAAE,CAAC;YAClC,KAAI,CAAC,WAAW,CAAC,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC;YACxC,KAAI,CAAC,WAAW,CAAC,iBAAiB,GAAE,IAAI,CAAC,aAAa,CAAC;YACvD,KAAI,CAAC,WAAW,CAAC,YAAY,GAAE,IAAI,CAAC,QAAQ,CAAC;YAC7C,KAAI,CAAC,WAAW,CAAC,cAAc,GAAE,IAAI,CAAC,UAAU,CAAC;YACjD,KAAI,CAAC,WAAW,CAAC,SAAS,GAAE,IAAI,CAAC,KAAK,CAAC;YACvC,KAAI,CAAC,WAAW,CAAC,YAAY,GAAE,IAAI,CAAC,QAAQ,CAAC;YAC7C,KAAI,CAAC,WAAW,CAAC,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC;YAC1C,KAAI,CAAC,WAAW,CAAC,mBAAmB,GAAG,IAAI,CAAC,gBAAgB,CAAC;QAC/D,CAAC,EACD,aAAG,IAAI,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,CAAC,CAAC;QACnE,IAAI,CAAC,WAAW,CAAC,aAAa,EAAE,CAAC;QACjC,IAAI,CAAC,WAAW,CAAC,eAAe,EAAE,CAAC;IACvC,CAAC;IAEC,8BAAW,GAAX,UAAY,KAAK;QACf,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,4DAAQ,CAAC,CAAC;IAC9B,CAAC;IAED,6BAAU,GAAV,UAAW,CAAC;QACV,IAAI,CAAC,WAAW,CAAC,UAAU,GAAG,CAAC,CAAC;QAChC,IAAI,CAAC,WAAW,CAAC,OAAO,GAAG,CAAC,CAAC;IAC/B,CAAC;IAEH,0BAAO,GAAP;QAAA,iBAgDC;QA9CC,IAAI,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC;YAClC,KAAK,EAAE,SAAS,GAAK,IAAI,CAAC,WAAW,CAAC,UAAU,GAAG,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC,SAAS,GAAG,IAAI;YAC5F,OAAO,EAAG,IAAI,CAAC,WAAW,CAAC,cAAc;gBAC3B,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC,SAAS;gBAClC,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC,YAAY;YACnD,OAAO,EAAE;gBACP;oBACE,IAAI,EAAE,QAAQ;oBACd,OAAO,EAAE;oBAET,CAAC;iBACF;gBACD;oBACE,IAAI,EAAE,QAAQ;oBACd,OAAO,EAAE;wBAEP,qBAAqB;wBAErB,IAAI,YAAY,GAAG;4BACjB,EAAE,EAAI,KAAI,CAAC,WAAW,CAAC,MAAM;4BAC7B,KAAK,EAAI,KAAI,CAAC,WAAW,CAAC,SAAS;4BACnC,aAAa,EAAI,KAAI,CAAC,WAAW,CAAC,iBAAiB;4BACnD,QAAQ,EAAI,KAAI,CAAC,WAAW,CAAC,YAAY;4BACzC,UAAU,EAAI,KAAI,CAAC,WAAW,CAAC,cAAc;4BAC7C,KAAK,EAAI,KAAI,CAAC,WAAW,CAAC,SAAS;4BACnC,QAAQ,EAAI,KAAI,CAAC,WAAW,CAAC,YAAY;4BACzC,MAAM,EAAI,KAAI,CAAC,WAAW,CAAC,UAAU;yBAEtC,CAAC;wBAGF,KAAI,CAAC,WAAW,CAAC,UAAU,CAAE,YAAY,CAAC,CAAC,IAAI,CAAC,cAAI;4BAClD,KAAI,CAAC,SAAS,CAAE,IAAI,CAAC,OAAO,CAAC,CAAC;4BAC9B,KAAI,CAAC,kBAAkB,EAAE,CAAC;wBAC1B,CAAC,EACD,aAAG,IAAI,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,CAAC,CAAC;wBAC3B,OAAO;oBACT,CAAC;iBACF;aACF;SACF,CAAC,CAAC;QACH,OAAO,CAAC,OAAO,EAAE,CAAC;IAKpB,CAAC;IAGD,2BAAQ,GAAR,UAAU,IAAI;QAAd,iBASC;QARG,IAAI,YAAY,GAAG;YACjB,SAAS,EAAE,IAAI;YACf,IAAI,EAAE,IAAI;SACX,CAAC;QACF,IAAI,CAAC,WAAW,CAAC,YAAY,CAAE,YAAY,CAAC,CAAC,IAAI,CAAC,cAAI;YACtB,KAAI,CAAC,SAAS,CAAE,IAAI,CAAC,OAAO,CAAC,CAAC;QAC5B,CAAC,EACL,aAAG,IAAI,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,CAAC,CAAC;IAC3D,CAAC;IAED,6BAAU,GAAV,UAAY,IAAI;QAAhB,iBASC;QARG,IAAI,YAAY,GAAG;YACjB,SAAS,EAAE,MAAM;YACjB,IAAI,EAAE,IAAI;SACX,CAAC;QACF,IAAI,CAAC,WAAW,CAAC,YAAY,CAAE,YAAY,CAAC,CAAC,IAAI,CAAC,cAAI;YACtB,KAAI,CAAC,SAAS,CAAE,IAAI,CAAC,OAAO,CAAC,CAAC;QAC5B,CAAC,EACL,aAAG,IAAI,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,CAAC,CAAC;IAC3D,CAAC;IAED,+BAAY,GAAZ;QAAA,iBAMC;QAJG,IAAI,CAAC,WAAW,CAAC,YAAY,EAAG,CAAC,IAAI,CAAC,cAAI;YACV,KAAI,CAAC,SAAS,CAAE,IAAI,CAAC,OAAO,CAAC,CAAC;QAC5B,CAAC,EACL,aAAG,IAAI,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,CAAC,CAAC;IAC3D,CAAC;IAED,8BAAW,GAAX,UAAY,QAAQ;QAApB,iBAmBC;QAlBC,IAAI,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC;YAClC,KAAK,EAAE,eAAe;YACtB,OAAO,EAAE;gBACP;oBACE,IAAI,EAAE,iBAAiB;oBACvB,OAAO,EAAE;wBACP,IAAI,YAAY,GAAG;4BACjB,QAAQ,EAAE,QAAQ;yBACnB,CAAC;wBACF,KAAI,CAAC,WAAW,CAAC,gBAAgB,CAAE,YAAY,CAAC,CAAC,IAAI,CAAC,cAAI;4BAC1B,KAAI,CAAC,SAAS,CAAE,IAAI,CAAC,OAAO,CAAC,CAAC;wBAC5B,CAAC,EACL,aAAG,IAAI,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,CAAC,CAAC;oBACzD,CAAC;iBACF;aACF;SACF,CAAC,CAAC;QACH,OAAO,CAAC,OAAO,EAAE,CAAC;IACpB,CAAC;IAED,4BAAS,GAAT,UAAU,OAAe;QACtB,IAAI,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC;YAChC,OAAO,EAAE,OAAO;YAChB,QAAQ,EAAE,IAAI;YACd,QAAQ,EAAE,KAAK;SAChB,CAAC,CAAC;QACH,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;IACvB,CAAC;IAhMW,QAAQ;QAJpB,wEAAS,CAAC;YACT,QAAQ,EAAE,WAAW;WACG;SACzB,CAAC;iBAe4L;OAdjL,QAAQ,CAkMpB;IAAD,CAAC;AAAA;SAlMY,QAAQ,e;;;;;;;;;;;;;;;;;;;;;;;;ACnBqB;AACgB;AACV;AAChD,6CAA6C;AAC7C,sCAAsC;AACP;AACS;AAEiB;AAEzD;;;;;GAKG;AAMH;IAOE,qBAAmB,OAAsB,EAAS,MAAiB,EAAE,sBAAsB,CAAS,WAAwB,EAAS,SAA0B;QAA5I,YAAO,GAAP,OAAO,CAAe;QAAS,WAAM,GAAN,MAAM,CAAW;QAAiC,gBAAW,GAAX,WAAW,CAAa;QAAS,cAAS,GAAT,SAAS,CAAiB;QAE7J,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC;QAE5C,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,KAAK,CAAC;QAC/C,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,aAAa,CAAC;QAC1D,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,QAAQ,CAAC;QACjD,IAAI,CAAC,sBAAsB,EAAG,CAAC;IACjC,CAAC;IAED,oCAAc,GAAd;QACE,OAAO,CAAC,GAAG,CAAC,wBAAwB,CAAC,CAAC;IACxC,CAAC;IAGD,2CAAqB,GAArB;QAAA,iBAgBC;QAdG,IAAI,YAAY,GAAG;YACjB,SAAS,EAAE,IAAI,CAAC,SAAS;YACzB,SAAS,EAAE,IAAI,CAAC,SAAS;YACzB,YAAY,EAAE,IAAI,CAAC,YAAY;YAC/B,QAAQ,EAAE,IAAI,CAAC,QAAQ;SACxB,CAAC;QAGF,IAAI,CAAC,WAAW,CAAC,YAAY,CAAE,YAAY,CAAC,CAAC,IAAI,CAAC,cAAI;YACtB,KAAI,CAAC,SAAS,CAAE,IAAI,CAAC,OAAO,CAAC,CAAC;YAC9B,KAAI,CAAC,OAAO,CAAC,OAAO,CAAC,4DAAQ,CAAC,CAAC;QAC7B,CAAC,EACL,aAAG,IAAI,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,CAAC,CAAC;IAE3D,CAAC;IAGD,+BAAS,GAAT,UAAU,OAAe;QACtB,IAAI,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC;YAChC,OAAO,EAAE,OAAO;YAChB,QAAQ,EAAE,IAAI;YACd,QAAQ,EAAE,KAAK;SAChB,CAAC,CAAC;QAEH,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;IACvB,CAAC;IAEJ,kCAAY,GAAZ,UAAc,CAAC;QACb,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC;IACpB,CAAC;IAED,4CAAsB,GAAtB;QAAA,iBAMC;QALC,IAAI,CAAC,WAAW,CAAC,sBAAsB,EAAE,CAAC,IAAI,CAAC,cAAI;YACrB,KAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,oBAAoB,CAAC;QAClD,CAAC,EACL,aAAG,IAAI,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,CAAC,CAAC;IAEzD,CAAC;IA7DY,WAAW;QAJvB,wEAAS,CAAC;YACT,QAAQ,EAAE,cAAc;WACG;SAC5B,CAAC;oBAQ+J;OAPpJ,WAAW,CA8DvB;IAAD,kBAAC;;AAAA;SA9DY,WAAW,e;;;;;;;ACrBxB;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,kC;;;;;;;ACVA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,kC;;;;;;;;;;;;;;;;;;;;;;;;;ACV0C;AACgB;AAGrB;AACN;AAEU;AACO;AACS;AAET;AAEhD;;;;;GAKG;AAMH;IAYE,2BAAmB,OAAsB,EAAS,SAAoB,EAAU,IAAU,EAAU,OAAgB,EAAS,SAA0B,EAAU,WAAwB,EAAQ,SAA0B;QAAxM,YAAO,GAAP,OAAO,CAAe;QAAS,cAAS,GAAT,SAAS,CAAW;QAAU,SAAI,GAAJ,IAAI,CAAM;QAAU,YAAO,GAAP,OAAO,CAAS;QAAS,cAAS,GAAT,SAAS,CAAiB;QAAU,gBAAW,GAAX,WAAW,CAAa;QAAQ,cAAS,GAAT,SAAS,CAAiB;QACvN,IAAI,CAAC,eAAe,EAAG,CAAC;IAC5B,CAAC;IAGD,0CAAc,GAAd;QACE,OAAO,CAAC,GAAG,CAAC,wBAAwB,CAAC,CAAC;IACxC,CAAC;IAED,2CAAe,GAAf;QAAA,iBAgBC;QAfC,IAAI,CAAC,WAAW,CAAC,aAAa,EAAE,CAAC,IAAI,CAAC,cAAI;YACxC,KAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC;YACpC,KAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;YAC1B,KAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;YACxB,KAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;YACxB,KAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;YACxB,KAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;YACxB,KAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;YAC5B,KAAI,CAAC,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC;YAC5C,KAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,gBAAgB,CAAC;QAG9C,CAAC,EACL,aAAG,IAAI,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,CAAC,CAAC;QACzB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC;IAC5C,CAAC;IAEH,wCAAY,GAAZ;QAAA,iBA0BC;QAzBC,kBAAkB;QAClB,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,iBAAiB,EAAI,IAAI,CAAC,SAAS,CAAC,CAAC;QACtD,IAAI,CAAC,WAAW,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;QAI5C,IAAI,YAAY,GAAG;YACjB,WAAW,EAAE,IAAI,CAAC,WAAW;YAC7B,MAAM,EAAE,IAAI,CAAC,MAAM;YACnB,KAAK,EAAE,IAAI,CAAC,KAAK;YACjB,KAAK,EAAE,IAAI,CAAC,KAAK;YACjB,KAAK,EAAE,IAAI,CAAC,KAAK;YACjB,KAAK,EAAE,IAAI,CAAC,KAAK;YACjB,OAAO,EAAE,IAAI,CAAC,OAAO;YACrB,eAAe,EAAE,IAAI,CAAC,eAAe;YACrC,gBAAgB,EAAE,IAAI,CAAC,gBAAgB;SACxC,CAAC;QAGF,IAAI,CAAC,WAAW,CAAC,cAAc,CAAE,YAAY,CAAC,CAAC,IAAI,CAAC,cAAI;YACtD,KAAI,CAAC,SAAS,CAAE,IAAI,CAAC,OAAO,CAAC,CAAC;QAE9B,CAAC,EACL,aAAG,IAAI,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,CAAC,CAAC;IAEzB,CAAC;IAGD,yCAAa,GAAb;QAAA,iBAmBC;QAjBC,IAAI,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC;YAClC,KAAK,EAAE,eAAe;YACtB,OAAO,EAAE;gBACP;oBACE,IAAI,EAAE,eAAe;oBACrB,OAAO,EAAE;wBACP,KAAI,CAAC,WAAW,CAAC,YAAY,EAAG,CAAC,IAAI,CAAC,cAAI;4BACxC,KAAI,CAAC,SAAS,CAAE,IAAI,CAAC,OAAO,CAAC,CAAC;wBAC9B,CAAC,EACH,aAAG,IAAI,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,CAAC,CAAC;oBAG3B,CAAC;iBACF;aACF;SACF,CAAC,CAAC;QACH,OAAO,CAAC,OAAO,EAAE,CAAC;IACpB,CAAC;IAED,2CAAe,GAAf;QAAA,iBAkBC;QAjBC,IAAI,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC;YAClC,KAAK,EAAE,eAAe;YACtB,OAAO,EAAE;gBACP;oBACE,IAAI,EAAE,cAAc;oBACpB,OAAO,EAAE;wBACP,KAAI,CAAC,WAAW,CAAC,cAAc,EAAG,CAAC,IAAI,CAAC,cAAI;4BAC1C,KAAI,CAAC,SAAS,CAAE,IAAI,CAAC,OAAO,CAAC,CAAC;wBAC9B,CAAC,EACH,aAAG,IAAI,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,CAAC,CAAC;oBAG3B,CAAC;iBACF;aACF;SACF,CAAC,CAAC;QACH,OAAO,CAAC,OAAO,EAAE,CAAC;IACpB,CAAC;IAID,qCAAS,GAAT,UAAU,OAAe;QACtB,IAAI,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC;YAChC,OAAO,EAAE,OAAO;YAChB,QAAQ,EAAE,IAAI;YACd,QAAQ,EAAE,KAAK;SAChB,CAAC,CAAC;QAEH,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;IACvB,CAAC;IAvHW,iBAAiB;QAJ7B,wEAAS,CAAC;YACT,QAAQ,EAAE,oBAAoB;WACG;SAClC,CAAC;0BAa2N;OAZhN,iBAAiB,CAyH7B;IAAD,CAAC;AAAA;SAzHY,iBAAiB,e;;;;;;;;;;;ACxB6C;AAElC;AAEzC,yGAAsB,EAAE,CAAC,eAAe,CAAC,8DAAS,CAAC,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACJM;AACH;AACkB;AAC9B;AAEH;AACM;AACA;AACS;AACkB;AAEpB;AACM;AACP;AAEE;AAoCtD;IAAA;IAAwB,CAAC;IAAZ,SAAS;QAlCrB,uEAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,6DAAK;gBACL,kEAAQ;gBACR,kEAAQ;gBACR,2EAAW;gBACX,6FAAiB;aAClB;YACD,OAAO,EAAE;gBACP,gFAAa;gBACb,kEAAW,CAAC,OAAO,CAAC,6DAAK,EAAE,EAAE,EACjC;oBACE,KAAK,EAAE,EAEN;iBACF,CAAC;gBACE,iEAAU;gBACV,2EAAkB,CAAC,OAAO,EAAE;aAC7B;YACD,SAAS,EAAE,CAAC,+DAAQ,CAAC;YACrB,eAAe,EAAE;gBACf,6DAAK;gBACL,kEAAQ;gBACR,kEAAQ;gBACR,2EAAW;gBACX,6FAAiB;aAClB;YACD,SAAS,EAAE;gBACT,2EAAS;gBACT,kFAAY;gBACZ,EAAC,OAAO,EAAE,mEAAY,EAAE,QAAQ,EAAE,wEAAiB,EAAC;gBACpD,6EAAW;aACZ;SACF,CAAC;OACW,SAAS,CAAG;IAAD,gBAAC;CAAA;AAAH;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnD+B;AACP;AACO;AACM;AAEb;AACA;AACS;AACkB;AAKzE;IAOE,eAAmB,QAAkB,EAAS,SAAoB,EAAS,YAA0B;QAAlF,aAAQ,GAAR,QAAQ,CAAU;QAAS,cAAS,GAAT,SAAS,CAAW;QAAS,iBAAY,GAAZ,YAAY,CAAc;QAJrG,aAAQ,GAAQ,kEAAQ,CAAC;QAKvB,IAAI,CAAC,aAAa,EAAE,CAAC;QAErB,8CAA8C;QAC9C,IAAI,CAAC,KAAK,GAAG;YACX,EAAE,KAAK,EAAE,QAAQ,EAAE,SAAS,EAAE,kEAAQ,EAAE;YACxC,EAAE,KAAK,EAAE,UAAU,EAAE,SAAS,EAAE,kEAAQ,EAAE;YAC1C,EAAE,KAAK,EAAE,cAAc,EAAE,SAAS,EAAE,2EAAW,EAAE;YACjD,EAAE,KAAK,EAAE,aAAa,EAAE,SAAS,EAAE,6FAAiB,EAAE;SACvD,CAAC;IAEJ,CAAC;IAED,6BAAa,GAAb;QAAA,iBAOC;QANC,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC,IAAI,CAAC;YACzB,gEAAgE;YAChE,iEAAiE;YACjE,KAAI,CAAC,SAAS,CAAC,YAAY,EAAE,CAAC;YAC9B,KAAI,CAAC,YAAY,CAAC,IAAI,EAAE,CAAC;QAC3B,CAAC,CAAC,CAAC;IACL,CAAC;IAED,wBAAQ,GAAR,UAAS,IAAI;QACX,+CAA+C;QAC/C,4DAA4D;QAC5D,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;IACnC,CAAC;IACD,8BAAc,GAAd;QACI,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,kEAAQ,CAAC,CAAC;IAC/B,CAAC;IACD,0BAAU,GAAV;QACI,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,kEAAQ,CAAC,CAAC;IAC/B,CAAC;IACD,4BAAY,GAAZ;QACI,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,6FAAiB,CAAC,CAAC;IACxC,CAAC;IAzCe;QAAf,yEAAS,CAAC,0DAAG,CAAC;kCAAM,0DAAG;sCAAC;IADd,KAAK;QAHjB,wEAAS,CAAC;WACc;SACxB,CAAC;cAQqG;OAP1F,KAAK,CA2CjB;IAAD,CAAC;AAAA;SA3CY,KAAK,2B;;;;;;;;;;;;;;;;;;;;;;;;;;ACbyB;AACN;AACN;AACd;AAEwB;AACsB;AAG/D;;;;;EAKE;AAEF;IAwBE,qBAAmB,IAAU,EAAU,OAAgB;QAAvD,iBAYC;QAZkB,SAAI,GAAJ,IAAI,CAAM;QAAU,YAAO,GAAP,OAAO,CAAS;QArBhD,YAAO,GAAQ,cAAc,CAAC;QAEvC,sBAAsB;QACb,WAAM,GAAG,CAAC,CAAC;QACX,cAAS,GAAE,EAAE,CAAC;QACd,sBAAiB,GAAE,EAAE,CAAC;QACtB,iBAAY,GAAE,EAAE,CAAC;QACjB,mBAAc,GAAG,EAAE,CAAC;QACpB,cAAS,GAAE,EAAE,CAAC;QACd,iBAAY,GAAE,EAAE,CAAC;QACjB,eAAU,GAAE,EAAE,CAAC;QACf,wBAAmB,GAAE,EAAE,CAAC;QACxB,uBAAkB,GAAC,EAAE,CAAC;QAKtB,aAAQ,GAAG,EAAE,OAAO,EAAE,IAAI,yEAAW,CAAC,EAAE,cAAc,EAAE,kBAAkB,EAAE,CAAC,EAAE,CAAC;QAEhF,qBAAgB,GAAG,kBAAkB,CAAC;QAI3C,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;QACrB,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;QAEnB,WAAW,CAAC,cAAI;YACI,KAAI,CAAC,aAAa,EAAE;QACtB,CAAC,EAAC,IAAI,CAAC,CAAC;QAE1B,6BAA6B;IAE/B,CAAC;IAED,gCAAU,GAAV,UAAW,OAAO;QAChB,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;IACzB,CAAC;IAGD,kCAAY,GAAZ;QACF,iCAAiC;QAC/B,MAAM,CAAI,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC;QAChD,OAAO;QACP,UAAU;QACV,4BAA4B;QAC5B,KAAK;IACL,CAAC;IAED,kCAAY,GAAZ,UAAa,GAAG;QACd,EAAE,CAAC,CAAC,GAAG,IAAI,EAAE,IAAI,GAAG,IAAI,IAAK,CAAC,CAAC,CAAC;YAC5B,IAAI,CAAC,SAAS,GAAG,GAAG,CAAC;QACzB,CAAC;QACD,IAAI,CAAC,CAAC;YACJ,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,gBAAgB,CAAC;QACzC,CAAC;IAGH,CAAC;IAEC,qCAAe,GAAf;QAEE,4BAA4B;QAC5B,8BAA8B;QAC9B,qDAAqD;QAGrD,IAAI,eAAe,GAAG;YACpB,YAAY,EAAE,eAAe;SAC9B,CAAC;QAEF,OAAO,CAAC,GAAG,CAAE,0BAA0B,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC;QAE1D,0GAA0G;QAC1G,MAAM,CAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,GAAG,oBAAoB,EAAE,IAAI,CAAC,SAAS,CAAC,eAAe,CAAC,CAAC;aACxE,GAAG,CAAC,cAAI,IAAI,WAAI,CAAC,IAAI,EAAE,EAAX,CAAW,CAAC;aACxB,SAAS,EAAE,CAAC;IACrC,CAAC;IAGD,iCAAW,GAAX;QAGE,+BAA+B;QAC/B,IAAI,OAAO,GAAG,IAAI,OAAO,EAAE,CAAC;QAC5B,OAAO,CAAC,MAAM,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;QAEnD,IAAI,eAAe,GAAG;YACpB,YAAY,EAAE,eAAe;SAC9B,CAAC;QAEF,MAAM,CAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,GAAG,oBAAoB,EAAE,IAAI,CAAC,SAAS,CAAC,eAAe,CAAC,CAAC;aACxE,GAAG,CAAC,cAAI,IAAI,WAAI,CAAC,IAAI,EAAE,EAAX,CAAW,CAAC;aACxB,SAAS,EAAE,CAAC;IACrC,CAAC;IAGD,2CAAqB,GAArB;QAGE,+BAA+B;QAC/B,IAAI,OAAO,GAAG,IAAI,OAAO,EAAE,CAAC;QAC5B,OAAO,CAAC,MAAM,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;QAEnD,IAAI,eAAe,GAAG;YACpB,YAAY,EAAE,0BAA0B;SACzC,CAAC;QAEF,MAAM,CAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,GAAG,oBAAoB,EAAE,IAAI,CAAC,SAAS,CAAC,eAAe,CAAC,CAAC;aACxE,GAAG,CAAC,cAAI,IAAI,WAAI,CAAC,IAAI,EAAE,EAAX,CAAW,CAAC;aACxB,SAAS,EAAE,CAAC;IACrC,CAAC;IAEH,kCAAY,GAAZ,UAAc,YAAY;QACxB,+BAA+B;QAC/B,IAAI,OAAO,GAAG,IAAI,OAAO,EAAE,CAAC;QAC5B,OAAO,CAAC,MAAM,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;QAEnD,IAAI,eAAe,GAAG;YACpB,YAAY,EAAE,gBAAgB;YAC9B,YAAY,EAAE,YAAY;SAC3B,CAAC;QACF,MAAM,CAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,GAAG,oBAAoB,EAAE,IAAI,CAAC,SAAS,CAAC,eAAe,CAAC,CAAC;aACtE,GAAG,CAAC,cAAI,IAAI,WAAI,CAAC,IAAI,EAAE,EAAX,CAAW,CAAC;aACxB,SAAS,EAAE,CAAC;IACvC,CAAC;IAGD,kCAAY,GAAZ,UAAc,YAAY;QACxB,+BAA+B;QAC/B,IAAI,OAAO,GAAG,IAAI,OAAO,EAAE,CAAC;QAC5B,OAAO,CAAC,MAAM,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;QAEnD,IAAI,eAAe,GAAG;YACpB,YAAY,EAAE,cAAc;YAC5B,YAAY,EAAE,YAAY;SAC3B,CAAC;QACF,MAAM,CAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,GAAG,oBAAoB,EAAE,IAAI,CAAC,SAAS,CAAC,eAAe,CAAC,CAAC;aACtE,GAAG,CAAC,cAAI,IAAI,WAAI,CAAC,IAAI,EAAE,EAAX,CAAW,CAAC;aACxB,SAAS,EAAE,CAAC;IACvC,CAAC;IAGD,sCAAgB,GAAhB,UAAkB,YAAY;QAC5B,+BAA+B;QAC/B,IAAI,OAAO,GAAG,IAAI,OAAO,EAAE,CAAC;QAC5B,OAAO,CAAC,MAAM,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;QAEnD,IAAI,eAAe,GAAG;YACpB,YAAY,EAAE,kBAAkB;YAChC,YAAY,EAAE,YAAY;SAC3B,CAAC;QACF,MAAM,CAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,GAAG,oBAAoB,EAAE,IAAI,CAAC,SAAS,CAAC,eAAe,CAAC,CAAC;aACtE,GAAG,CAAC,cAAI,IAAI,WAAI,CAAC,IAAI,EAAE,EAAX,CAAW,CAAC;aACxB,SAAS,EAAE,CAAC;IAGvC,CAAC;IAID,4CAAsB,GAAtB;QACE,+BAA+B;QAC/B,IAAI,OAAO,GAAG,IAAI,OAAO,EAAE,CAAC;QAC5B,OAAO,CAAC,MAAM,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;QAEnD,IAAI,eAAe,GAAG;YACpB,YAAY,EAAE,0BAA0B;SACzC,CAAC;QAEF,MAAM,CAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,GAAG,oBAAoB,EAAE,IAAI,CAAC,SAAS,CAAC,eAAe,CAAC,CAAC;aACxE,GAAG,CAAC,cAAI,IAAI,WAAI,CAAC,IAAI,EAAE,EAAX,CAAW,CAAC;aACxB,SAAS,EAAE,CAAC;IAErC,CAAC;IAED,mCAAa,GAAb;QACE,+BAA+B;QAC/B,IAAI,OAAO,GAAG,IAAI,OAAO,EAAE,CAAC;QAC5B,OAAO,CAAC,MAAM,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;QAEnD,IAAI,eAAe,GAAG;YACpB,YAAY,EAAE,iBAAiB;SAChC,CAAC;QAEF,MAAM,CAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,GAAG,oBAAoB,EAAE,IAAI,CAAC,SAAS,CAAC,eAAe,CAAC,CAAC;aACxE,GAAG,CAAC,cAAI,IAAI,WAAI,CAAC,IAAI,EAAE,EAAX,CAAW,CAAC;aACxB,SAAS,EAAE,CAAC;IACrC,CAAC;IAED,oCAAc,GAAd,UAAgB,YAAY;QAC1B,+BAA+B;QAC/B,IAAI,OAAO,GAAG,IAAI,OAAO,EAAE,CAAC;QAC5B,OAAO,CAAC,MAAM,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;QAEnD,IAAI,eAAe,GAAG;YACpB,YAAY,EAAE,kBAAkB;YAChC,YAAY,EAAE,YAAY;SAC3B,CAAC;QACF,MAAM,CAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,GAAG,oBAAoB,EAAE,IAAI,CAAC,SAAS,CAAC,eAAe,CAAC,CAAC;aACtE,GAAG,CAAC,cAAI,IAAI,WAAI,CAAC,IAAI,EAAE,EAAX,CAAW,CAAC;aACxB,SAAS,EAAE,CAAC;IAEvC,CAAC;IAED,gCAAU,GAAV,UAAa,YAAY;QACvB,+BAA+B;QAC/B,IAAI,OAAO,GAAG,IAAI,OAAO,EAAE,CAAC;QAC5B,OAAO,CAAC,MAAM,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;QAEnD,IAAI,eAAe,GAAG;YACpB,YAAY,EAAE,aAAa;YAC3B,YAAY,EAAE,YAAY;SAC3B,CAAC;QACF,MAAM,CAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,GAAG,oBAAoB,EAAE,IAAI,CAAC,SAAS,CAAC,eAAe,CAAC,CAAC;aACtE,GAAG,CAAC,cAAI,IAAI,WAAI,CAAC,IAAI,EAAE,EAAX,CAAW,CAAC;aACxB,SAAS,EAAE,CAAC;IAEvC,CAAC;IAGD,kCAAY,GAAZ;QACE,IAAI,OAAO,GAAG,IAAI,OAAO,EAAE,CAAC;QAC5B,OAAO,CAAC,MAAM,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;QAEnD,IAAI,eAAe,GAAG;YACpB,YAAY,EAAE,eAAe;SAC9B,CAAC;QACF,MAAM,CAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,GAAG,oBAAoB,EAAE,IAAI,CAAC,SAAS,CAAC,eAAe,CAAC,CAAC;aACtE,GAAG,CAAC,cAAI,IAAI,WAAI,CAAC,IAAI,EAAE,EAAX,CAAW,CAAC;aACxB,SAAS,EAAE,CAAC;IACvC,CAAC;IAED,oCAAc,GAAd;QACE,IAAI,OAAO,GAAG,IAAI,OAAO,EAAE,CAAC;QAC5B,OAAO,CAAC,MAAM,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;QAEnD,IAAI,eAAe,GAAG;YACpB,YAAY,EAAE,iBAAiB;SAChC,CAAC;QACF,MAAM,CAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,GAAG,oBAAoB,EAAE,IAAI,CAAC,SAAS,CAAC,eAAe,CAAC,CAAC;aACtE,GAAG,CAAC,cAAI,IAAI,WAAI,CAAC,IAAI,EAAE,EAAX,CAAW,CAAC;aACxB,SAAS,EAAE,CAAC;IACvC,CAAC;IAED,mCAAa,GAAb;QAAA,iBAiCC;QAhCC,+BAA+B;QAC/B,IAAI,OAAO,GAAG,IAAI,OAAO,EAAE,CAAC;QAC5B,OAAO,CAAC,MAAM,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;QAEnD,IAAI,eAAe,GAAG;YACpB,YAAY,EAAE,sBAAsB;SACrC,CAAC;QAEF,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,GAAG,oBAAoB,EAAE,IAAI,CAAC,SAAS,CAAC,eAAe,CAAC,CAAC;aAC/D,GAAG,CAAC,cAAI,IAAI,WAAI,CAAC,IAAI,EAAE,EAAX,CAAW,CAAC;aACxB,SAAS,EAAE,CAAC,IAAI,CAAC,cAAI;YACF,KAAI,CAAC,UAAU,GAAG,IAAI,CAAC;YACvB,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;QACrB,CAAC,EACT,aAAG,IAAI,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,CAAC,CAAC;QAElE,uBAAuB;QACvB,IAAI,QAAQ,GAAG,IAAI,OAAO,EAAE,CAAC;QAC7B,OAAO,CAAC,MAAM,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;QAEnD,IAAI,gBAAgB,GAAG;YACrB,YAAY,EAAE,kBAAkB;SACjC,CAAC;QAEF,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,GAAG,oBAAoB,EAAE,IAAI,CAAC,SAAS,CAAC,gBAAgB,CAAC,CAAC;aAChE,GAAG,CAAC,cAAI,IAAI,WAAI,CAAC,IAAI,EAAE,EAAX,CAAW,CAAC;aACxB,SAAS,EAAE,CAAC,IAAI,CAAC,cAAI;YACF,KAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,YAAY,CAAC;YAC5C,OAAO,CAAC,GAAG,CAAC,2BAA2B,CAAC,CAAC;QACnC,CAAC,EACT,aAAG,IAAI,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,CAAC,CAAC;IAElE,CAAC;IAGD,kCAAY,GAAZ;QACE,+BAA+B;QAC/B,IAAI,OAAO,GAAG,IAAI,OAAO,EAAE,CAAC;QAC5B,OAAO,CAAC,MAAM,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;QAEnD,IAAI,eAAe,GAAG;YACpB,YAAY,EAAE,cAAc;SAC7B,CAAC;QACF,MAAM,CAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,GAAG,oBAAoB,EAAE,IAAI,CAAC,SAAS,CAAC,eAAe,CAAC,CAAC;aACtE,GAAG,CAAC,cAAI,IAAI,WAAI,CAAC,IAAI,EAAE,EAAX,CAAW,CAAC;aACxB,SAAS,EAAE,CAAC;IAGvC,CAAC;IACD,qCAAe,GAAf;QAAA,iBAqBC;QAnBD,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;YAE7B,+BAA+B;YAC/B,IAAI,OAAO,GAAG,IAAI,OAAO,EAAE,CAAC;YAC5B,OAAO,CAAC,MAAM,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;YAEnD,IAAI,eAAe,GAAG;gBACpB,YAAY,EAAE,wBAAwB;aACvC,CAAC;YAEF,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,GAAG,oBAAoB,EAAE,IAAI,CAAC,SAAS,CAAC,eAAe,CAAC,CAAC;iBAC/D,GAAG,CAAC,cAAI,IAAI,WAAI,CAAC,IAAI,EAAE,EAAX,CAAW,CAAC;iBACxB,SAAS,EAAE,CAAC,IAAI,CAAC,cAAI;gBACF,KAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;gBACrB,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;YACrB,CAAC,EACT,aAAG,IAAI,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,CAAC,CAAC;QACnE,CAAC;IAED,CAAC;IA/TY,WAAW;QADvB,yEAAU,EAAE;yCAyBc,2DAAI,EAAmB,+DAAO;OAxB5C,WAAW,CAiUvB;IAAD,kBAAC;CAAA;AAjUuB;;;;;;;;;;;;;;;;;;;;;;;;AChBkB;AACe;AACjB;AACS;AAEQ;AAOzD;IAQE,kBAAmB,OAAsB,EAAS,SAAoB,EAAU,WAAwB;QAArF,YAAO,GAAP,OAAO,CAAe;QAAS,cAAS,GAAT,SAAS,CAAW;QAAU,gBAAW,GAAX,WAAW,CAAa;QAFxG,eAAU,GAAW,EAAE,CAAC;QAGtB,8EAA8E;QAC9E,IAAI,CAAC,YAAY,GAAG,SAAS,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QAC1C,IAAI,CAAC,mBAAmB,EAAG,CAAC;IAC9B,CAAC;IAED,sCAAmB,GAAnB;QAAA,iBAWC;QAVC,IAAI,CAAC,WAAW,CAAC,qBAAqB,EAAE,CAAC,IAAI,CAAC,cAAI;YACJ,KAAI,CAAC,eAAe,GAAG,IAAI,CAAC;YAC5B,KAAI,CAAC,4BAA4B,GAAG,KAAI,CAAC,eAAe,CAAC;QAC7D,CAAC,EACL,aAAG,IAAI,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,CAAC,CAAC;QAC/D,IAAI,CAAC,WAAW,CAAC,WAAW,EAAE,CAAC,IAAI,CAAC,cAAI;YACM,KAAI,CAAC,KAAK,GAAG,IAAI,CAAC;YAClB,KAAI,CAAC,kBAAkB,GAAG,KAAI,CAAC,KAAK,CAAC;QACzC,CAAC,EACL,aAAG,IAAI,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,CAAC,CAAC;IACjE,CAAC;IAED,6BAAU,GAAV,UAAW,KAAK,EAAE,IAAI;QACpB,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,4DAAQ,EAAE;YAC7B,IAAI,EAAE,IAAI;SACX,CAAC,CAAC;IACL,CAAC;IAED,+BAAY,GAAZ,UAAa,KAAK,EAAE,IAAI;QACtB,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,qEAAW,EAAE;YAC7B,IAAI,EAAE,IAAI;SACX,CAAC,CAAC;IACL,CAAC;IAED,8BAAW,GAAX,UAAY,KAAK;QACf,IAAI,QAAQ,GAAG,EAAC,EAAE,EAAE,CAAC,EAAC,KAAK,EAAE,EAAE,EAAE,aAAa,EAAE,EAAE,EAAE,QAAQ,EAAE,EAAE,EAAC,CAAC;QAClE,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,qEAAW,EAAC;YAC5B,IAAI,EAAE,QAAQ;SACf,CAAC,CAAC;IACL,CAAC;IAEH,8BAAW,GAAX,UAAY,KAAK;QACjB,6BAA6B;QAC7B,uCAAuC;QACtC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,kBAAkB,CAAC;QACrC,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,4BAA4B,CAAC;QAEzD,wCAAwC;QACxC,IAAI,GAAG,GAAG,IAAI,CAAC,UAAU,CAAC;QAE1B,yDAAyD;QACzD,EAAE,CAAC,CAAC,GAAG,IAAI,GAAG,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;YAC5B,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,UAAC,IAAI;gBAClC,MAAM,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,WAAW,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;YACpE,CAAC,CAAC;QACJ,CAAC;QACD,EAAE,CAAC,CAAC,GAAG,IAAI,GAAG,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;YAC5B,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,UAAC,IAAI;gBACtD,MAAM,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,WAAW,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;YACpE,CAAC,CAAC;QACJ,CAAC;IACF,CAAC;IAlEY,QAAQ;QAJpB,wEAAS,CAAC;YACT,QAAQ,EAAE,WAAW;WACG;SACzB,CAAC;iBASwG;OAR7F,QAAQ,CAsEpB;IAAD,CAAC;AAAA;SAtEY,QAAQ,e","file":"main.js","sourcesContent":["import { Component } from '@angular/core';\nimport { NavController , NavParams } from 'ionic-angular';\nimport { ListPage } from '../list/list';\n//import { ServerAPI } from '../../providers/server-api';\n\nimport { Injectable } from '@angular/core';\nimport { Http } from '@angular/http';\nimport 'rxjs/add/operator/map';\n\nimport {BackendData} from '../../providers/backend-data';\n\nimport { AlertController } from 'ionic-angular';\nimport { ToastController } from 'ionic-angular';\n\n\n@Component({\n  selector: 'page-home',\n  templateUrl: 'home.html'\n})\nexport class HomePage {\n\n/* title;\n bot_nosaukums;\n potcelms;\n kategorija;\n skira;\n daudzums;\n skaits;\n skaits_favoriiti;\n*/\nqueueToday: Array<{id: string; title: string, satus: string, color:string}>;\nqueueOld: Array<{id: string; title: string, satus: string, color:string}>;\n\n  constructor(public navCtrl: NavController, public params: NavParams, public http: Http, private backendData: BackendData,public alertCtrl: AlertController,public toastCtrl: ToastController) {\n\n\n    try {\n      // this will execute if comming from list page\n      this.backendData.mainId = this.params.get('item').id;\n      this.backendData.mainTitle = this.params.get('item').title;\n      this.backendData.mainBot_nosaukums = this.params.get('item').bot_nosaukums;\n      this.backendData.mainPotcelms = this.params.get('item').potcelms;\n    } catch(e) {\n      // default or previously used values\n      this.get_main_form_data ();\n    }\n\n\n\n  }\n\nget_main_form_data () {\n\n// get server URL\nif (this.backendData.ServerURL) {\n//  console.log ('ServerURL is set: ' + this.backendData.ServerURL );\n  this.getData2 ();\n}\nelse {\n  console.log ('ServerURL is not set: ' );\n  this.backendData.getServerURL().then((val) => {\n//            console.log ('server URL from storage:' + val);\n            this.backendData.setServerURL(val);\n            this.getData2 ();\n          });\n\n}\n\n// then get the actual data\n\n\n}\n\n\ngetData2 () {\n    this.backendData.getMainFormData().then(data => {\n\n                                                //this.title = data.title;\n                                                this.backendData.mainId = data.id;\n                                                this.backendData.mainTitle = data.title;\n                                                this.backendData.mainBot_nosaukums= data.bot_nosaukums;\n                                                this.backendData.mainPotcelms= data.potcelms;\n                                                this.backendData.mainKategorija= data.kategorija;\n                                                this.backendData.mainSkira= data.skira;\n                                                this.backendData.mainDaudzums= data.daudzums;\n                                                this.backendData.mainSkaits = data.skaits;\n                                                this.backendData.mainSkaitsFavoriiti = data.skaits_favoriiti;\n                                              },\n                                              err => console.log(err));\n    this.backendData.getQueueToday();\n    this.backendData.getQueueHistory();\n}\n\n  change_sort(event) {\n    this.navCtrl.push(ListPage);\n  }\n\n  set_skaits(x) {\n    this.backendData.mainSkaits = x;\n    this.backendData.message = x;\n  }\n\ndoPrint () {\n\n  let confirm = this.alertCtrl.create({\n    title: 'Drukāt ' +   this.backendData.mainSkaits + ' x ' + this.backendData.mainTitle + ' ?' ,\n    message:  this.backendData.mainKategorija +\n                  ' / ' + this.backendData.mainSkira +\n                  ' / ' + this.backendData.mainDaudzums,\n    buttons: [\n      {\n        text: 'Atcelt',\n        handler: () => {\n\n        }\n      },\n      {\n        text: 'Drukāt',\n        handler: () => {\n\n          // compile parameters\n\n          let request_data = {\n            id:   this.backendData.mainId,\n            Title:   this.backendData.mainTitle,\n            Bot_nosaukums:   this.backendData.mainBot_nosaukums,\n            Potcelms:   this.backendData.mainPotcelms,\n            Kategorija:   this.backendData.mainKategorija,\n            Skira:   this.backendData.mainSkira,\n            Daudzums:   this.backendData.mainDaudzums,\n            Skaits:   this.backendData.mainSkaits,\n\n          };\n\n\n          this.backendData.printLabel (request_data).then(data => {\n            this.showToast (data.message);\n            this.get_main_form_data();\n            },\n            err => console.log(err));\n          // send\n        }\n      }\n    ]\n  });\n  confirm.present();\n\n\n\n\n}\n\n\nscrollUp (step) {\n    let request_data = {\n      direction: \"up\",\n      step: step\n    };\n    this.backendData.scroll_paper (request_data).then(data => {\n                                    this.showToast (data.message);\n                                      },\n                                  err => console.log(err));\n}\n\nscrollDown (step) {\n    let request_data = {\n      direction: \"down\",\n      step: step\n    };\n    this.backendData.scroll_paper (request_data).then(data => {\n                                    this.showToast (data.message);\n                                      },\n                                  err => console.log(err));\n}\n\nupdate_queue () {\n\n    this.backendData.update_queue ().then(data => {\n                                    this.showToast (data.message);\n                                      },\n                                  err => console.log(err));\n}\n\ncancelPrint(queue_id){\n  let confirm = this.alertCtrl.create({\n    title: 'Skaidri zini?' ,\n    buttons: [\n      {\n        text: 'Atcelt šo darbu',\n        handler: () => {\n          let request_data = {\n            queue_id: queue_id\n          };\n          this.backendData.cancel_print_job (request_data).then(data => {\n                                          this.showToast (data.message);\n                                            },\n                                        err => console.log(err));\n        }\n      }\n    ]\n  });\n  confirm.present();\n}\n\nshowToast(message: string) {\n   let toast = this.toastCtrl.create({\n     message: message,\n     duration: 2000,\n     position: 'top'\n   });\n   toast.present(toast);\n }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/home/home.ts","import { Component } from '@angular/core';\nimport {  NavController, NavParams } from 'ionic-angular';\nimport { ToastController } from 'ionic-angular';\n//import { Injectable } from '@angular/core';\n//mport { Http } from '@angular/http';\nimport 'rxjs/add/operator/map';\nimport { ListPage } from '../list/list';\n\nimport {BackendData} from '../../providers/backend-data';\n\n/**\n * Generated class for the Product page.\n *\n * See http://ionicframework.com/docs/components/#navigation for more info\n * on Ionic pages and navigation.\n */\n\n@Component({\n  selector: 'page-product',\n  templateUrl: 'product.html',\n})\nexport class ProductPage {\n  Nosaukums;\n  BotNosaukums;\n  Potcelms;\n  productId;\n  potcelms_suggestions;\n\n  constructor(public navCtrl: NavController, public params: NavParams, /*public http: Http,*/ private backendData: BackendData, public toastCtrl: ToastController) {\n\n    this.productId = this.params.get('item').id;\n\n    this.Nosaukums = this.params.get('item').title;\n    this.BotNosaukums = this.params.get('item').bot_nosaukums;\n    this.Potcelms = this.params.get('item').potcelms;\n    this.getPotcelmssuggestions ();\n  }\n\n  ionViewDidLoad() {\n    console.log('ionViewDidLoad Product');\n  }\n\n\n  saglabaatSkirnesDatus () {\n\n      let request_data = {\n        productID: this.productId,\n        Nosaukums: this.Nosaukums,\n        BotNosaukums: this.BotNosaukums,\n        Potcelms: this.Potcelms,\n      };\n\n\n      this.backendData.saveSortData (request_data).then(data => {\n                                      this.showToast (data.message);\n                                      this.navCtrl.setRoot(ListPage);\n                                        },\n                                    err => console.log(err));\n\n  }\n\n\n  showToast(message: string) {\n     let toast = this.toastCtrl.create({\n       message: message,\n       duration: 2000,\n       position: 'top'\n     });\n\n     toast.present(toast);\n   }\n\nset_potcelms (x) {\n  this.Potcelms = x;\n}\n\ngetPotcelmssuggestions () {\n  this.backendData.getPotcelmuSuggestions().then(data => {\n                                this.potcelms_suggestions = data.potcelms_suggestions;\n                                    },\n                                err => console.log(err));\n\n}\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/product/product.ts","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 168;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@angular/core/esm5 lazy\n// module id = 168\n// module chunks = 0","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 212;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src lazy\n// module id = 212\n// module chunks = 0","import { Component } from '@angular/core';\nimport {  NavController, NavParams } from 'ionic-angular';\n\nimport { Injectable } from '@angular/core';\nimport { Http } from '@angular/http';\nimport 'rxjs/add/operator/map';\n\nimport { Storage } from '@ionic/storage';\nimport { ToastController } from 'ionic-angular';\nimport {BackendData} from '../../providers/backend-data';\n\nimport { AlertController } from 'ionic-angular';\n\n/**\n * Generated class for the Product page.\n *\n * See http://ionicframework.com/docs/components/#navigation for more info\n * on Ionic pages and navigation.\n */\n\n@Component({\n  selector: 'page-configuration',\n  templateUrl: 'configuration.html',\n})\nexport class ConfigurationPage {\nGadsPartija;\nServerURL;\nSyncON;\nLine1;\nLine2;\nLine3;\nLine4;\nlmargin;\ngap_after_label;\nscroll_parameter;\n\n  constructor(public navCtrl: NavController, public navParams: NavParams,  public http: Http, private storage: Storage, public toastCtrl: ToastController, private backendData: BackendData,public alertCtrl: AlertController) {\n      this.get_config_data ();\n  }\n\n\n  ionViewDidLoad() {\n    console.log('ionViewDidLoad Product');\n  }\n\n  get_config_data () {\n    this.backendData.getConfigData().then(data => {\n      this.GadsPartija = data.GadsPartija;\n      this.SyncON = data.SyncON;\n      this.Line1 = data.Line1;\n      this.Line2 = data.Line2;\n      this.Line3 = data.Line3;\n      this.Line4 = data.Line4;\n      this.lmargin = data.lmargin;\n      this.gap_after_label = data.gap_after_label;\n      this.scroll_parameter = data.scroll_parameter;\n\n\n      },\n  err => console.log(err));\n  this.ServerURL = this.backendData.ServerURL;\n  }\n\nsaveSettings () {\n  // set a key/value\n  this.storage.set('storedServerURL',   this.ServerURL);\n  this.backendData.ServerURL = this.ServerURL;\n\n\n\n  let request_data = {\n    GadsPartija: this.GadsPartija,\n    SyncON: this.SyncON,\n    Line1: this.Line1,\n    Line2: this.Line2,\n    Line3: this.Line3,\n    Line4: this.Line4,\n    lmargin: this.lmargin,\n    gap_after_label: this.gap_after_label,\n    scroll_parameter: this.scroll_parameter,\n  };\n\n\n  this.backendData.saveConfigData (request_data).then(data => {\n    this.showToast (data.message);\n\n    },\nerr => console.log(err));\n\n}\n\n\nreboot_server () {\n\n  let confirm = this.alertCtrl.create({\n    title: 'Skaidri zini?' ,\n    buttons: [\n      {\n        text: 'Jā, restartēt',\n        handler: () => {\n          this.backendData.rebootServer ().then(data => {\n            this.showToast (data.message);\n            },\n          err => console.log(err));\n\n\n        }\n      }\n    ]\n  });\n  confirm.present();\n}\n\nshutdown_server () {\n  let confirm = this.alertCtrl.create({\n    title: 'Skaidri zini?' ,\n    buttons: [\n      {\n        text: 'Jā, shutdown',\n        handler: () => {\n          this.backendData.shutdownServer ().then(data => {\n            this.showToast (data.message);\n            },\n          err => console.log(err));\n\n\n        }\n      }\n    ]\n  });\n  confirm.present();\n}\n\n\n\nshowToast(message: string) {\n   let toast = this.toastCtrl.create({\n     message: message,\n     duration: 2000,\n     position: 'top'\n   });\n\n   toast.present(toast);\n }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/configuration/configuration.ts","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app.module';\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { ErrorHandler, NgModule } from '@angular/core';\nimport { IonicApp, IonicErrorHandler, IonicModule } from 'ionic-angular';\nimport { HttpModule } from '@angular/http';\n\nimport { MyApp } from './app.component';\nimport { HomePage } from '../pages/home/home';\nimport { ListPage } from '../pages/list/list';\nimport { ProductPage } from '../pages/product/product';\nimport { ConfigurationPage } from '../pages/configuration/configuration';\n\nimport { StatusBar } from '@ionic-native/status-bar';\nimport { SplashScreen } from '@ionic-native/splash-screen';\nimport { IonicStorageModule } from '@ionic/storage';\n\nimport {BackendData} from '../providers/backend-data';\n\n@NgModule({\n  declarations: [\n    MyApp,\n    HomePage,\n    ListPage,\n    ProductPage,\n    ConfigurationPage\n  ],\n  imports: [\n    BrowserModule,\n    IonicModule.forRoot(MyApp),\n    HttpModule,\n    IonicStorageModule.forRoot()\n  ],\n  bootstrap: [IonicApp],\n  entryComponents: [\n    MyApp,\n    HomePage,\n    ListPage,\n    ProductPage,\n    ConfigurationPage\n  ],\n  providers: [\n    StatusBar,\n    SplashScreen,\n    {provide: ErrorHandler, useClass: IonicErrorHandler},\n    BackendData\n  ]\n})\nexport class AppModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import { Component, ViewChild } from '@angular/core';\nimport { Nav, Platform } from 'ionic-angular';\nimport { StatusBar } from '@ionic-native/status-bar';\nimport { SplashScreen } from '@ionic-native/splash-screen';\n\nimport { HomePage } from '../pages/home/home';\nimport { ListPage } from '../pages/list/list';\nimport { ProductPage } from '../pages/product/product';\nimport { ConfigurationPage } from '../pages/configuration/configuration';\n\n@Component({\n  templateUrl: 'app.html'\n})\nexport class MyApp {\n  @ViewChild(Nav) nav: Nav;\n\n  rootPage: any = HomePage;\n\n  pages: Array<{title: string, component: any}>;\n\n  constructor(public platform: Platform, public statusBar: StatusBar, public splashScreen: SplashScreen) {\n    this.initializeApp();\n\n    // used for an example of ngFor and navigation\n    this.pages = [\n      { title: 'Drukāt', component: HomePage },\n      { title: 'Saraksts', component: ListPage },\n      { title: 'Šķirnes dati', component: ProductPage },\n      { title: 'Uzstādījumi', component: ConfigurationPage }\n    ];\n\n  }\n\n  initializeApp() {\n    this.platform.ready().then(() => {\n      // Okay, so the platform is ready and our plugins are available.\n      // Here you can do any higher level native things you might need.\n      this.statusBar.styleDefault();\n      this.splashScreen.hide();\n    });\n  }\n\n  openPage(page) {\n    // Reset the content nav to have just this page\n    // we wouldn't want the back button to show in this scenario\n    this.nav.setRoot(page.component);\n  }\n  go_to_homepage() {\n      this.nav.setRoot(HomePage);\n  }\n  go_to_list() {\n      this.nav.setRoot(ListPage);\n  }\n  go_to_config() {\n      this.nav.setRoot(ConfigurationPage);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { Injectable } from '@angular/core';\nimport { Http } from '@angular/http';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/Rx';\n\nimport { Storage } from '@ionic/storage';\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\n\n\n/*\n  Generated class for the BackendData provider.\n\n  See https://angular.io/docs/ts/latest/guide/dependency-injection.html\n  for more info on providers and Angular 2 DI.\n*/\n@Injectable()\nexport class BackendData {\n\n  public ServerURL;\n  public message: any = \"I'm new here\";\n\n// main page form data\n  public mainId = 0;\n  public mainTitle= \"\";\n  public mainBot_nosaukums= \"\";\n  public mainPotcelms= \"\";\n  public mainKategorija = \"\";\n  public mainSkira= \"\";\n  public mainDaudzums= \"\";\n  public mainSkaits= \"\";\n  public mainSkaitsFavoriiti= \"\";\n  public print_queue_status=\"\";\n\n  public queueToday: Array<{id: string; title: string,count:string, printed_count:string, satus: string, color:string}>;\n  public queueOld: Array<{id: string; title: string,count:string, printed_count:string, satus: string, color:string}>;\n\n private _options = { headers: new HttpHeaders({ 'Content-Type': 'application/json' }) };\n\n  public ServerURLDefault = \"http://localhost\";\n\n  constructor(public http: Http, private storage: Storage) {\n\n    this.ServerURL = null;\n    this.queueToday = [];\n    this.queueOld = [];\n\n    setInterval(data=>{\n                        this.getQueueToday()\n                      },1000);\n\n    // Or to get a key/value pair\n\n  }\n\n  setMessage(message) {\n    this.message = message;\n  }\n\n\n  getServerURL () {\n//  if (this.ServerURL == null) {\n  return    this.storage.get('storedServerURL');\n//    }\n//  else {\n//    return this.ServerURL;\n//  }\n}\n\nsetServerURL(val) {\n  if (val != '' && val != null ) {\n      this.ServerURL = val;\n  }\n  else {\n    this.ServerURL = this.ServerURLDefault;\n  }\n\n\n}\n\n  getMainFormData ()\n  {\n    // get main data from Server\n    //let headers = new Headers();\n    //headers.append('Content-Type', 'application/json');\n\n\n    let post_parameters = {\n      request_type: \"get_main_data\"\n    };\n\n    console.log ('get main form data from ' + this.ServerURL);\n\n    //return   this.http.post(this.ServerURL + '/print_app_API.php', JSON.stringify(post_parameters), headers)\n    return   this.http.post(this.ServerURL + '/print_app_API.php', JSON.stringify(post_parameters))\n                          .map(data => data.json())\n                          .toPromise();\n  }\n\n\n  getListData ()\n  {\n\n    // get default data from Server\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n\n    let post_parameters = {\n      request_type: \"get_sort_list\"\n    };\n\n    return   this.http.post(this.ServerURL + '/print_app_API.php', JSON.stringify(post_parameters))\n                          .map(data => data.json())\n                          .toPromise();\n  }\n\n\n  getListDataFavourites ()\n  {\n\n    // get default data from Server\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n\n    let post_parameters = {\n      request_type: \"get_sort_list_favourites\"\n    };\n\n    return   this.http.post(this.ServerURL + '/print_app_API.php', JSON.stringify(post_parameters))\n                          .map(data => data.json())\n                          .toPromise();\n  }\n\nsaveSortData (request_data) {\n  // get default data from Server\n  let headers = new Headers();\n  headers.append('Content-Type', 'application/json');\n\n  let post_parameters = {\n    request_type: \"save_sort_data\",\n    request_data: request_data\n  };\n  return   this.http.post(this.ServerURL + '/print_app_API.php', JSON.stringify(post_parameters))\n                          .map(data => data.json())\n                          .toPromise();\n}\n\n\nscroll_paper (request_data) {\n  // get default data from Server\n  let headers = new Headers();\n  headers.append('Content-Type', 'application/json');\n\n  let post_parameters = {\n    request_type: \"scroll_paper\",\n    request_data: request_data\n  };\n  return   this.http.post(this.ServerURL + '/print_app_API.php', JSON.stringify(post_parameters))\n                          .map(data => data.json())\n                          .toPromise();\n}\n\n\ncancel_print_job (request_data) {\n  // get default data from Server\n  let headers = new Headers();\n  headers.append('Content-Type', 'application/json');\n\n  let post_parameters = {\n    request_type: \"cancel_print_job\",\n    request_data: request_data\n  };\n  return   this.http.post(this.ServerURL + '/print_app_API.php', JSON.stringify(post_parameters))\n                          .map(data => data.json())\n                          .toPromise();\n\n\n}\n\n\n\ngetPotcelmuSuggestions () {\n  // get default data from Server\n  let headers = new Headers();\n  headers.append('Content-Type', 'application/json');\n\n  let post_parameters = {\n    request_type: \"get_potcelms_suggestions\"\n  };\n\n  return   this.http.post(this.ServerURL + '/print_app_API.php', JSON.stringify(post_parameters))\n                        .map(data => data.json())\n                        .toPromise();\n\n}\n\ngetConfigData () {\n  // get default data from Server\n  let headers = new Headers();\n  headers.append('Content-Type', 'application/json');\n\n  let post_parameters = {\n    request_type: \"get_config_data\"\n  };\n\n  return   this.http.post(this.ServerURL + '/print_app_API.php', JSON.stringify(post_parameters))\n                        .map(data => data.json())\n                        .toPromise();\n}\n\nsaveConfigData (request_data) {\n  // get default data from Server\n  let headers = new Headers();\n  headers.append('Content-Type', 'application/json');\n\n  let post_parameters = {\n    request_type: \"save_config_data\",\n    request_data: request_data\n  };\n  return   this.http.post(this.ServerURL + '/print_app_API.php', JSON.stringify(post_parameters))\n                          .map(data => data.json())\n                          .toPromise();\n\n}\n\nprintLabel  (request_data) {\n  // get default data from Server\n  let headers = new Headers();\n  headers.append('Content-Type', 'application/json');\n\n  let post_parameters = {\n    request_type: \"print_label\",\n    request_data: request_data\n  };\n  return   this.http.post(this.ServerURL + '/print_app_API.php', JSON.stringify(post_parameters))\n                          .map(data => data.json())\n                          .toPromise();\n\n}\n\n\nrebootServer () {\n  let headers = new Headers();\n  headers.append('Content-Type', 'application/json');\n\n  let post_parameters = {\n    request_type: \"reboot_server\"\n  };\n  return   this.http.post(this.ServerURL + '/print_app_API.php', JSON.stringify(post_parameters))\n                          .map(data => data.json())\n                          .toPromise();\n}\n\nshutdownServer () {\n  let headers = new Headers();\n  headers.append('Content-Type', 'application/json');\n\n  let post_parameters = {\n    request_type: \"shutdown_server\"\n  };\n  return   this.http.post(this.ServerURL + '/print_app_API.php', JSON.stringify(post_parameters))\n                          .map(data => data.json())\n                          .toPromise();\n}\n\ngetQueueToday () {\n  // get default data from Server\n  let headers = new Headers();\n  headers.append('Content-Type', 'application/json');\n\n  let post_parameters = {\n    request_type: \"get_print_list_today\"\n  };\n\n  this.http.post(this.ServerURL + '/print_app_API.php', JSON.stringify(post_parameters))\n                        .map(data => data.json())\n                        .toPromise().then(data => {\n                                            this.queueToday = data;\n                                            console.log(\"list loaded\");\n                                                  },\n                                          err => console.log(err));\n\n // get queue tmp_status\n let headers2 = new Headers();\n headers.append('Content-Type', 'application/json');\n\n let post_parameters2 = {\n   request_type: \"get_queue_status\"\n };\n\n this.http.post(this.ServerURL + '/print_app_API.php', JSON.stringify(post_parameters2))\n                       .map(data => data.json())\n                       .toPromise().then(data => {\n                                           this.print_queue_status = data.queue_status;\n                                           console.log(\"print_queue_status loaded\");\n                                                 },\n                                         err => console.log(err));\n\n}\n\n\nupdate_queue () {\n  // get default data from Server\n  let headers = new Headers();\n  headers.append('Content-Type', 'application/json');\n\n  let post_parameters = {\n    request_type: \"update_queue\"\n  };\n  return   this.http.post(this.ServerURL + '/print_app_API.php', JSON.stringify(post_parameters))\n                          .map(data => data.json())\n                          .toPromise();\n\n\n}\ngetQueueHistory () {\n\nif (this.queueOld.length < 1) { // skip refresh if data is already there.\n\n  // get default data from Server\n  let headers = new Headers();\n  headers.append('Content-Type', 'application/json');\n\n  let post_parameters = {\n    request_type: \"get_print_list_history\"\n  };\n\n  this.http.post(this.ServerURL + '/print_app_API.php', JSON.stringify(post_parameters))\n                        .map(data => data.json())\n                        .toPromise().then(data => {\n                                            this.queueOld = data;\n                                            console.log(\"list loaded\");\n                                                  },\n                                          err => console.log(err));\n}\n\n}\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/backend-data.ts","import { Component } from '@angular/core';\nimport { NavController, NavParams } from 'ionic-angular';\nimport { HomePage } from '../home/home';\nimport { ProductPage } from '../product/product';\n\nimport {BackendData} from '../../providers/backend-data';\n\n\n@Component({\n  selector: 'page-list',\n  templateUrl: 'list.html'\n})\nexport class ListPage {\n  selectedItem: any;\n  items: Array<{id: string; title: string, bot_nosaukums: string, potcelms:string}>;\n  itemsFavourites: Array<{id: string; title: string, bot_nosaukums: string, potcelms:string}>;\n  items_local_backup: any;\n  itemsFavourites_local_backup: any;\n  searchTerm: string = '';\n\n  constructor(public navCtrl: NavController, public navParams: NavParams, private backendData: BackendData) {\n    // If we navigated to this page, we will have an item available as a nav param\n    this.selectedItem = navParams.get('item');\n    this.GetItemsFromBackend ();\n  }\n\n  GetItemsFromBackend () {\n    this.backendData.getListDataFavourites().then(data => {\n                                                  this.itemsFavourites = data;\n                                                  this.itemsFavourites_local_backup = this.itemsFavourites;\n                                              },\n                                          err => console.log(err));\n    this.backendData.getListData().then(data => {\n                                                  this.items = data;\n                                                  this.items_local_backup = this.items;\n                                              },\n                                          err => console.log(err));\n  }\n\n  itemTapped(event, item) {\n    this.navCtrl.setRoot(HomePage, {\n      item: item\n    });\n  }\n\n  edit_product(event, item) {\n    this.navCtrl.push(ProductPage, {\n      item: item\n    });\n  }\n\n  new_product(event) {\n    let new_item = {id: 0,title: \"\", bot_nosaukums: \"\", potcelms: \"\"};\n    this.navCtrl.push(ProductPage,{\n      item: new_item\n    });\n  }\n\nsearchItems(event) {\n// search and update the list\n// Reset items back to all of the items\n this.items = this.items_local_backup;\n this.itemsFavourites = this.itemsFavourites_local_backup;\n\n // set val to the value of the ev target\n var val = this.searchTerm;\n\n // if the value is an empty string don't filter the items\n if (val && val.trim() != '') {\n   this.items = this.items.filter((item) => {\n     return (item.title.toLowerCase().indexOf(val.toLowerCase()) > -1);\n   })\n }\n if (val && val.trim() != '') {\n   this.itemsFavourites = this.itemsFavourites.filter((item) => {\n     return (item.title.toLowerCase().indexOf(val.toLowerCase()) > -1);\n   })\n }\n}\n\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/list/list.ts"],"sourceRoot":""}